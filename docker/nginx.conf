events {}

stream {
    resolver 127.0.0.11 ipv6=off;
    server {
        listen 5349 ssl;
        proxy_pass turn:3478;
        ssl_certificate /etc/nginx/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/certs/localhost.key;
    }
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/certs/localhost.key;
#       ssl_certificate /etc/letsencrypt/live/couckan.com/fullchain.pem;
#       ssl_certificate_key /etc/letsencrypt/live/couckan.com/privkey.pem;

        resolver 127.0.0.11 ipv6=off;
        # utilise localhost par d√©faut pour les tests hors Docker
        set $backend 127.0.0.1;

        location / {
            proxy_pass http://$backend:55151;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # WebSocket proxy
        location /ws/ {
            proxy_pass http://$backend:7272/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location = /ws {
            proxy_pass http://$backend:7272/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # WebRTC signaling proxy
        location /signal/ {
            proxy_pass http://$backend:8877/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location = /signal {
            proxy_pass http://$backend:8877/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        # TURN proxy for environments where only port 443 is available
        location /turn/ {
            proxy_pass https://turn:5349/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }

        location = /turn {
            proxy_pass https://turn:5349/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }
    }
}
